name: "85-slack-reflection-prompt.yml"

# This workflow uses the same setup as workflow 82:
# <https://ucsb-cs156.github.io/topics/github_actions/workflow_82.html>

on:
  schedule:
    # During Daylight Saving Time (Mar–Nov), Pacific is UTC-7
    - cron: "0 16 * * 4"  # 9 AM PDT

    # During Standard Time (Nov–Mar), Pacific is UTC-8
    # - cron: "0 17 * * 4"  # 9 AM PST

  workflow_dispatch:  # Allows manual triggering

env:
  PAT: ${{ secrets.PAT }}
  TEAM_TO_CHANNEL: ${{vars.TEAM_TO_CHANNEL}}
  ORG_NAME: ${{ github.repository_owner }}
  REPO_NAME: ${{ github.event.repository.name }}
  # The columns in the Kanban board that we are interested in
  START_DATE: "2025-05-10"
  END_DATE: "2025-06-06"  # Set the end date for the workflow

jobs:

  # This job checks if the current date is before the END_DATE
  check_date:
    name: Check Date
    runs-on: ubuntu-latest
    outputs:
      continue: ${{ steps.check_date.outputs.continue }}
    steps:
      - name: Check if current date is before END_DATE
        id: check_date
        run: |
          current_date=$(date +%Y-%m-%d)
          end_date="${{ env.END_DATE }}"
          start_date="${{ env.START_DATE }}"
          
          if [[ "$current_date" > "$end_date" ]]; then
            echo "Current date is after $end_date. Stopping workflow."
            echo "continue=false" >> "$GITHUB_OUTPUT"
          else
            echo "Current date is before $end_date. Continuing workflow."
            echo "continue=true" >> "$GITHUB_OUTPUT"
          fi
          if [[ "$current_date" < "$start_date" ]]; then
            echo "Current date is before $start_date. Stopping workflow."
            echo "continue=false" >> "$GITHUB_OUTPUT"
          fi
          
          OWNER=${{ github.repository_owner }}
          OWNER_PLUS_REPOSITORY=${{github.repository}}
          REPOSITORY=${OWNER_PLUS_REPOSITORY/$OWNER\//}  
          if [[ "$OWNER" == "ucsb-cs156" ]]; then
            echo "This workflow should not run on repos in the ucsb-cs156 organization"
            echo "continue=false" >> "$GITHUB_OUTPUT"
          fi
          if [[ "$REPOSITORY" == STARTER* ]]; then
            echo "This workflow should not run on STARTER repos"
            echo "continue=false" >> "$GITHUB_OUTPUT"
          fi
          if [[ -f "$GITHUB_OUTPUT" ]]; then
            echo "Contents of $GITHUB_OUTPUT:"
            cat "$GITHUB_OUTPUT"
          fi
        
  # This job extracts the team name from the repository name
  # The team name is used to find the project ID for the team
  # It does this by extracting the last 6 characters of the repository name
  # Then sets the team name as an output for the next job
  get_team_name:
    name: Get Team Name and Repository Name
    runs-on: ubuntu-latest
    needs: check_date
    if: needs.check_date.outputs.continue == 'true'
    outputs:
      team: ${{ steps.find_team.outputs.team }}
      repository: ${{ steps.find_team.outputs.repository }}
    steps:
      - name: Extract Team Name from Repo
        id: find_team
        run: |
          REPO=${{ github.repository }}
          TEAM_NAME="${REPO: -6}"

          OWNER_PLUS_REPOSITORY=${{github.repository}}
          OWNER=${{ github.repository_owner }}
          REPOSITORY=${OWNER_PLUS_REPOSITORY/$OWNER\//}  

          echo "repository=${REPOSITORY}" >> "$GITHUB_OUTPUT"
          echo "team=${TEAM_NAME}" >> "$GITHUB_OUTPUT"
          

  send-to-slack:
    name: Send Report to Slack
    runs-on: ubuntu-latest
    needs: [get_team_name, check_date]
    if: needs.check_date.outputs.continue == 'true'
    steps:
      #This step is used to debug the environment variables and Slack text
      - name: Debug Environment Variables
        run: |
          echo "TEAM_TO_CHANNEL: ${{ env.TEAM_TO_CHANNEL }}"
          echo "ORG_NAME: ${{ env.ORG_NAME }}"
          echo "Slack Channel: ${{ fromJSON(env.TEAM_TO_CHANNEL)[needs.get_team_name.outputs.team] }}"
   
      #This step sends the report to the Slack channel associated with the team
      - name: Send Report to Slack
        uses: archive/github-actions-slack@v2.10.1
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_BOT_USER_OAUTH_ACCESS_TOKEN }}
          slack-channel: ${{ fromJSON(env.TEAM_TO_CHANNEL)[needs.get_team_name.outputs.team] }}
          slack-optional-icon_emoji: ":fire:"
          slack-blocks: >-
            [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "⚖️🤝💭 *Weekly Reflection Prompt* 💭🤝⚖️"
                  }
                },
                {
                  "type": "divider"
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Hey team! It's time for our weekly reflection on contributions and team dynamics. Consider the following things:"
                  }
                },
  
                {
                  "type": "context",
                  "elements": [{
                    "type": "mrkdwn",
                    "text": "> (1) What *factors* does the team think are important in evaluating individual contributions (e.g. size, complexity, scope of various tasks, individual circumstances, etc.)"
                  }]
                },
                {
                  "type": "context",
                  "elements": [{
                    "type": "mrkdwn",
                    "text": "> (2) Is each of us contributing in a *fair and equitable* way to finishing the work that needs to be done? (including coding, code review and other contributions)?"
                  }]
                },
                {
                  "type": "context",
                  "elements": [{
                    "type": "mrkdwn",
                    "text": "> (3) Are we holding each other *accountable*?"
                  }]
                },
                {
                  "type": "context",
                  "elements": [{
                    "type": "mrkdwn",
                    "text": "> (4) Is each of us doing *high quality* work?"
                  }]
                },
         
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "To earn credit for this graded participation activity, each team member is required to respond to this post (by *replying on this thread*; click the `Reply in thread` button) with a few sentences that address these points, and then participate in a brief group discussion on this thread (responding to what others have said)."
                  }
                },
                {
                  "type": "divider"
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": "For more info and an example, see: <https://ucsb-cs156.github.io/s25/info/reflection.html>"
                    }
                  ]
                },
                {
                  "type": "divider"
                },
              ]



